// 1. Find all the topics and tasks which are thought in the month of October

db.topics.aggregate([
  {
    $lookup: {
      from: "tasks",
      localField: "topicid",
      foreignField: "topicid",
      as: "taskInfo",
    },
  },
  { $unwind: "$taskInfo" },
  {
    $match: {
      topic_date: {
        $gte: new Date("2020-10-01"),
        $lt: new Date("2020-11-01"),
      },
      "taskInfo.due_date": {
        $gte: new Date("2020-10-01"),
        $lt: new Date("2020-11-01"),
      },
    },
  },
  {
    $project: {
      _id: 0,
      topic: 1,
      topic_date: {
        $dateToString: { format: "%Y-%m-%d", date: "$topic_date" },
      },
      task_name: "$taskInfo.task",
      due_date: {
        $dateToString: {
          format: "%Y-%m-%d",
          date: "$taskInfo.due_date",
        },
      },
    },
  },
]);



// 2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.company_drives.aggregate([
  {
    $match: {
      drive_date: {
        $gte: new Date("2020-10-15"),
        $lte: new Date("2020-10-31"),
      },
    },
  },
  {
    $project: {
      _id: 0,
      drive_date: {
        $dateToString: { format: "%Y-%m-%d", date: "$drive_date" },
      },
      company: 1,
      
    },
  },
  { $sort: { drive_date: 1 } },
]);


// 3. Find all the company drives and students who are appeared for the placement?
db.company_drives.aggregate([
    {
      $lookup: {
        from: "users",
        localField: "userid",
        foreignField: "userid",
        as: "userinfo",
      },
    },
    {
      $project: {
        _id: 0,
        "userinfo.name": 1,
        company: 1,
        drive_date: 1,
        "userinfo.email": 1,
        "userinfo.userid": 1,
      },
    },
  ]);
  

// 4. Find the number of problems solved by the user in codekata?

db.codekata.aggregate([
    {
      $lookup: {
        from: "users",
        localField: "userid",
        foreignField: "userid",
        as: "userinfo",
      },
    },
    {
      $project: {
        _id: 0,
        userid: 1,
        problems: 1,
        "userinfo.name": 1,
      },
    },
  ]);
  
  
  
// 5. Find all the mentors with who has the mentee's count more than 15
  
  db.users.aggregate([
    {
      $lookup: {
        from: "mentors",
        localField: "mentorid",
        foreignField: "mentorid",
        as: "mentorInfo",
      },
    },
    {
      $group: {
        _id: {
          mentorid: "$mentorInfo.mentorid",
          mentorname: "$mentorInfo.mentorname",
        },
        mentee_count: { $sum: 1 },
      },
    },
    { $match: { mentee_count: { $gt: 15 } } },
  ]);

// 6. Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020*/
  
  db.attendance.aggregate([
    {
      $lookup: {
        from: "topics",
        localField: "topicid",
        foreignField: "topicid",
        as: "topics",
      },
    },
    {
      $lookup: {
        from: "tasks",
        localField: "topicid",
        foreignField: "topicid",
        as: "tasks",
      },
    },
    { $match: { $and: [{ attended: false }, { "tasks.submitted": false }] } },
    {
      $match: {
        $and: [
          {
            $or: [
              { "topics.topic_date": { $gte: new Date("15-oct-2020") } },
              { "topics.topic_date": { $lte: new Date("31-oct-2020") } },
            ],
          },
          {
            $or: [
              { "tasks.due_date": { $gte: new Date("15-oct-2020") } },
              { "tasks.due_date": { $lte: new Date("31-oct-2020") } },
            ],
          },
        ],
      },
    },
    {
      $count: "No_of_students_absent",
    },
  ]);
  
